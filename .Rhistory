lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#conceptual plot of continuous and binary reaction norm sampling
setwd("~/Documents/Projects/toleranceCurves/bayes/")
source("tolerance_functions.R")
scale.kumara2 <- function(x, a, b, c, d, e1){
xs <- (x - d)/e1
mod.fit <- c*((a*b*xs^(a-1) ) * (1-xs^a)^(b-1))
return(list(xs = xs, mod.fit=mod.fit))
}
#-----------------interaction scenerio----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.4, 1)
d <- c(7, 1)
e <- c(17, 15)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mfrow=c(2,2))
par(mar=c(2,4,4,2))
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*1.1
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="", ylab="",  main="Discrete Reaction Norms")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#-------------false parallel scenerio-----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.5, 1)
d <- c(5.5, 7)
e <- c(15, 16)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mar=c(5,4,2,2))
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="Environment", ylab="Trait")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#conceptual plot of continuous and binary reaction norm sampling
setwd("~/Documents/Projects/toleranceCurves/bayes/")
source("tolerance_functions.R")
scale.kumara2 <- function(x, a, b, c, d, e1){
xs <- (x - d)/e1
mod.fit <- c*((a*b*xs^(a-1) ) * (1-xs^a)^(b-1))
return(list(xs = xs, mod.fit=mod.fit))
}
#-----------------interaction scenerio----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.4, 1)
d <- c(7, 1)
e <- c(17, 15)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mfrow=c(2,2))
par(mar=c(2,4,4,2))
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*1.1
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="", ylab="",  main="Discrete")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#-------------false parallel scenerio-----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.5, 1)
d <- c(5.5, 7)
e <- c(15, 16)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mar=c(5,4,2,2))
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="Environment", ylab="Trait")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#conceptual plot of continuous and binary reaction norm sampling
setwd("~/Documents/Projects/toleranceCurves/bayes/")
source("tolerance_functions.R")
scale.kumara2 <- function(x, a, b, c, d, e1){
xs <- (x - d)/e1
mod.fit <- c*((a*b*xs^(a-1) ) * (1-xs^a)^(b-1))
return(list(xs = xs, mod.fit=mod.fit))
}
#-----------------interaction scenerio----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.4, 1)
d <- c(7, 1)
e <- c(17, 15)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mfrow=c(2,2))
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*1.1
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="", ylab="",  main="Discrete")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#-------------false parallel scenerio-----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.5, 1)
d <- c(5.5, 7)
e <- c(15, 16)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mar=c(5,4,2,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="Environment", ylab="Trait")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="")
box()
axis(side = 1, at = range(xseq))
axis(side = 2, at=seq(0,yrng[2], by = 0.5))
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#conceptual plot of continuous and binary reaction norm sampling
setwd("~/Documents/Projects/toleranceCurves/bayes/")
source("tolerance_functions.R")
scale.kumara2 <- function(x, a, b, c, d, e1){
xs <- (x - d)/e1
mod.fit <- c*((a*b*xs^(a-1) ) * (1-xs^a)^(b-1))
return(list(xs = xs, mod.fit=mod.fit))
}
#-----------------interaction scenerio----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.4, 1)
d <- c(7, 1)
e <- c(17, 15)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mfrow=c(2,2))
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*1.1
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="", ylab="",  main="Discrete")
box()
axis(side = 1, at = range(xseq))
axis(side = 2)
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#-------------false parallel scenerio-----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.5, 1)
d <- c(5.5, 7)
e <- c(15, 16)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mar=c(5,4,2,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="Environment", ylab="Trait")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="")
box()
axis(side = 1, at = range(xseq))
axis(side = 2)
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#conceptual plot of continuous and binary reaction norm sampling
setwd("~/Documents/Projects/toleranceCurves/bayes/")
source("tolerance_functions.R")
scale.kumara2 <- function(x, a, b, c, d, e1){
xs <- (x - d)/e1
mod.fit <- c*((a*b*xs^(a-1) ) * (1-xs^a)^(b-1))
return(list(xs = xs, mod.fit=mod.fit))
}
#-----------------interaction scenerio----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.4, 1)
d <- c(7, 1)
e <- c(17, 15)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
pdf("figures/conceptual_ReNorm.pdf")
par(mfrow=c(2,2))
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*1.1
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="", ylab="",  main="Discrete")
box()
axis(side = 1, at = range(xseq))
axis(side = 2)
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#-------------false parallel scenerio-----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.5, 1)
d <- c(5.5, 7)
e <- c(15, 16)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mar=c(5,4,2,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T,
xlab="Environment", ylab="Trait")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="")
box()
axis(side = 1, at = range(xseq))
axis(side = 2)
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
dev.off()
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.lab=2
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
par(mfrow=c(2,2))
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.lab=2
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.lab=2
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.axis=2
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.lab=2,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
#conceptual plot of continuous and binary reaction norm sampling
setwd("~/Documents/Projects/toleranceCurves/bayes/")
source("tolerance_functions.R")
scale.kumara2 <- function(x, a, b, c, d, e1){
xs <- (x - d)/e1
mod.fit <- c*((a*b*xs^(a-1) ) * (1-xs^a)^(b-1))
return(list(xs = xs, mod.fit=mod.fit))
}
#-----------------interaction scenerio----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.4, 1)
d <- c(7, 1)
e <- c(17, 15)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
pdf("figures/conceptual_ReNorm.pdf")
par(mfrow=c(2,2))
par(mar=c(2,4,4,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.lab=1.5,
xlab="", ylab="Trait", main="Continuous")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*1.1
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
cex.lab=1.5, xlab="", ylab="",  main="Discrete")
box()
axis(side = 1, at = range(xseq))
axis(side = 2)
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
#-------------false parallel scenerio-----------------
xseq <- seq(0, 1, length.out = 500)
a <- c(4, 4)
b <- c(4, 4)
c <- c(1.5, 1)
d <- c(5.5, 7)
e <- c(15, 16)
s1 <- unscale.kumara(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- unscale.kumara(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0.9, 1.1)
xrng <- range(c(s1$xs, s2$xs))*c(0.9, 1.1)
par(mar=c(5,4,2,2)*1.1)
plot(NA, NA, xlim=xrng, ylim=yrng, axes=T, cex.lab=1.5,
xlab="Environment", ylab="Trait")
lines(s1$xs, s1$mod.fit, lwd=3)
lines(s2$xs, s2$mod.fit, lwd=3, col="grey40")
xseq <- seq(12, 15, length.out = 500)
s1 <- scale.kumara2(x = xseq, a = a[1], b = b[1], c = c[1], d = d[1], e1 = e[1])
s2 <- scale.kumara2(x = xseq, a = a[2], b = b[2], c = c[2], d = d[2], e1 = e[2])
lines(xseq, s1$mod.fit, lwd=8)
lines(xseq, s2$mod.fit, lwd=8, col="grey40")
yrng <- range(c(s1$mod.fit, s2$mod.fit))*c(0, 1.1)
plot(NA, NA, xlim=range(xseq)*c(0.95, 1.05), ylim=yrng, axes=F,
xlab="Environment", ylab="", cex.lab=1.5)
box()
axis(side = 1, at = range(xseq))
axis(side = 2)
lines(xseq, s1$mod.fit, lwd=4)
lines(xseq, s2$mod.fit, lwd=4, col="grey40")
#points(xseq[1], s1$mod.fit[1], pch=19)
#points(tail(xseq, 1), tail(s1$mod.fit, 1), pch=19)
#points(xseq[1], s2$mod.fit[1], pch=19, col="grey40")
#points(tail(xseq, 1), tail(s2$mod.fit, 1), pch=19, col="grey40")
dev.off()
iris
?iris
trees
iris3
iris
plot(iris$Petal.Length, iris$Species, main="Simple R plot",
xlab="Car weight", ylab="MPG")
plot(iris$Sepal.Length, iris$Sepal.Width, main="Simple R plot",
xlab="Sepal Length", ylab="Sepal Width")
plot(iris$Petal.Length, iris$Species, main="Simple R plot",
xlab="Car weight", ylab="MPG")
plot(iris$Species, iris$Sepal.Length, main="Simple R plot",
xlab="Car weight", ylab="MPG")
mean(iris$Petal.Width)
var(iris$Petal.Width)
sd(iris$Petal.Width)
